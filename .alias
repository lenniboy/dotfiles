os=`uname`

command="ls -lah"
if [[ "$os" == "Linux" ]]
then
  alias ll="$command --color"
  alias ack="ack-grep"
  alias gvim='UBUNTU_MENUPROXY= gvim'
fi

if [[ "$os" == "Darwin" ]]
then
  alias ll="${command}G"
  alias gvim="mvim"
  alias clear-dns="sudo killall -HUP mDNSResponder"
fi
alias grep='grep --color=auto'
alias jsonpretty='python -mjson.tool'
alias maketags='ctags -R .'
alias rmmux='rm ~/.ssh/mux-*'
alias list-ssh-tunnels='ps aux|grep "ssh -f"|grep -v grep'
alias myip='ifconfig | grep "inet " | cut -d" " -f 2'
alias mvim2='mvim +vsplit -c ":set lines=999 columns=999" $@'
alias mvim3='mvim +vsplit +vsplit -c ":set lines=999 columns=999" $@'
alias rvim='mvim --remote $@'
alias serve='open http://localhost:8123 && python3 -m http.server 8123'
alias timestamp='date "+%Y%m%d%H%M%S"'
alias isotime='date -u +"%Y-%m-%dT%H:%M:%SZ"'
alias uuid="uuidgen | tr '[:upper:]' '[:lower:]'"
alias password="openssl rand -base64 12"
alias returncode='echo $?'

function swap() {
  mv $1 tmp && mv $2 $1 && mv tmp $2
}

function ssl-expiry() {
  echo | openssl s_client -servername $1 -connect $1:443 2>/dev/null | openssl x509 -noout -dates
}

alias gca='git commit -am'
alias gcm='git commit -m'
alias gp='git push'
alias gpf='git push -f'
alias gitignore='vim .gitignore'

alias tlog='sudo less +F /var/log/tomcat7/catalina.out'
alias a-encrypt='ansible-vault encrypt --vault-password-file ~/.vault_pass.txt'
alias a-decrypt='ansible-vault decrypt --vault-password-file ~/.vault_pass.txt'
alias a-edit='ansible-vault edit --vault-password-file ~/.vault_pass.txt'

alias kill-sbt-instances='jps | grep sbt-launch.jar | cut -d" " -f 1 | xargs kill -9'

function rssh(){
  echo "Looking up public IP for EC2 instance named '$1'"
  IP=`aws ec2 describe-instances --filters "Name=tag:Name,Values=${1}" "Name=instance-state-name,Values=running"| jq .Reservations[0].Instances[0].NetworkInterfaces[0].Association.PublicIp -r`
  echo "IP for '$1' is $IP"
  ssh leonard@$IP
}

function check-port(){
  nc -z $1 $2
  if [ $? -eq 0 ]
    then
    echo "Port $1 is open"
  else
    echo "Port $1 is closed"
  fi

}

# Elasticsearch
ES_BASE='http://localhost:9200'
alias es-health='http ${ES_BASE}/_cluster/health'
alias es-indices='http ${ES_BASE}/_cat/indices'

alias vim='nvim'
alias reload-tmux-config='tmux source-file ~/.tmux.conf'

# kubectl

alias kubectl-staging='kubectl --context k8s.staging.unterwegs.io'
alias kubectl-dev='kubectl --context k8s.dev.unterwegs.io'
function kubectl-dev-pods() {
  kubectl-dev get pods | grep $1 | cut -d" " -f1
}

function kubectl-dev-logs() {
  kubectl-dev logs `kubectl-dev get pods | grep $1 | cut -d" " -f1`
}



